#!/usr/bin/env bash

WORKING_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

red=`tput setab 1 2>/dev/null || true`
yellow=`tput setab 3 2>/dev/null || true`
green=`tput setab 2 2>/dev/null || true`
blue=`tput setab 4 2>/dev/null || true`
reset=`tput sgr0 2>/dev/null || true`
bold=`tput bold 2>/dev/null || true`

die ( ) {
    echo
    echo "${bold}${red} $* ${reset}"
    echo
    exit 1
}

ensure ( ) {
    command -v $1 >/dev/null 2>&1 || die "ERROR: '$1' could be found in your PATH. Please install $1. $2"
}

info ( ) {
    echo "${bold}${blue} $* ${reset}"
}

# Requires kotlin version 1.1.3+
ensure kotlin 'https://kotlinlang.org/'

# Load up arguments
source args

# Set KOTLIN_HOME

if [ -z "$KOTLIN_HOME" ]; then
  echo "NO KOTLIN HOME FOUND, searching for it"
  export KOTLIN_HOME=$(KOTLIN_RUNNER=1 JAVACMD=echo kotlinc | awk 'NR>1' RS=' ' | grep -F kotlin.home= | cut -d= -f2)
fi

# Step 1: Creating ap jar
info "Creating annotation processing jar"
$KOTLIN_HOME/bin/kotlinc \
./ap-kt/br/com/thales/buckt/kotlin/ViewBinder.kt \
./ap-kt/br/com/thales/buckt/kotlin/VBProcessor.kt \
-classpath $CLASSPATH \
-d ap-kt/build/output \
-verbose \
-module-name my-kt-ap \
-no-stdlib \
-no-reflect \
&& info "STEP 1 COMPLETE." || die "STEP 1 FAILED."

cp -r ap-kt/resources/META-INF ap-kt/build/output/META-INF
(cd ap-kt/build/output && zip -r my-ap-kt-lib META-INF br && mv my-ap-kt-lib.zip my-ap-kt-lib.jar && rm -rf META-INF && rm -rf br)

# Step 2: Creating ap jar
info "Creating annotation processing jar"
javac \
./ap-java/br/com/thales/buckt/java/ViewModel.java \
./ap-java/br/com/thales/buckt/java/VMProcessor.java \
-classpath $JAVA_CLASSPATH \
-d ap-java/build/output \
-verbose \
&& info "STEP 2 COMPLETE." || die "STEP 2 FAILED."

cp -r ap-java/resources/META-INF ap-java/build/output/META-INF
(cd ap-java/build/output && zip -r my-ap-java-lib META-INF br && mv my-ap-java-lib.zip my-ap-java-lib.jar && rm -rf META-INF && rm -rf br)

# Step 1: Generate Stubs
info "Generating sample stubs"
$KOTLIN_HOME/bin/kotlinc \
sample/br/com/thales/buckt/AnnotatedMain.kt \
sample/br/com/thales/buckt/AnnotatedMainJava.java \
-Xadd-compiler-builtins \
-classpath $APT_CLASSPATH \
-d sample/build/output \
-verbose \
-Xload-builtins-from-dependencies \
-module-name my-ap-client \
-no-reflect \
-no-stdlib \
-Xplugin=$TOOLS_JAR \
-Xplugin=$ANNOTATION_PROCESSOR \
-P plugin:org.jetbrains.kotlin.kapt3:aptMode=stubs \
-P plugin:org.jetbrains.kotlin.kapt3:apclasspath=$WORKING_DIR/libs/kotlin-stdlib.jar \
-P plugin:org.jetbrains.kotlin.kapt3:apclasspath=$WORKING_DIR/ap-java/build/output/my-ap-java-lib.jar \
-P plugin:org.jetbrains.kotlin.kapt3:apclasspath=$WORKING_DIR/ap-kt/build/output/my-ap-kt-lib.jar \
-P plugin:org.jetbrains.kotlin.kapt3:sources=$SOURCES \
-P plugin:org.jetbrains.kotlin.kapt3:classes=$CLASSES \
-P plugin:org.jetbrains.kotlin.kapt3:incrementalData=$INCREMENTAL_DATA \
-P plugin:org.jetbrains.kotlin.kapt3:stubs=$STUBS \
-P plugin:org.jetbrains.kotlin.kapt3:apoptions=$GENERATED_DIR_MAP \
-P plugin:org.jetbrains.kotlin.kapt3:javacArguments=$EMPTY_MAP \
-P plugin:org.jetbrains.kotlin.kapt3:useLightAnalysis=$LIGHT_ANALYSIS \
-P plugin:org.jetbrains.kotlin.kapt3:correctErrorTypes=$CORRECT_ERROR_TYPES \
-P plugin:org.jetbrains.kotlin.kapt3:verbose=$VERBOSE \
&& info "STEP 3 COMPLETE." || die "STEP 3 FAILED."
#
# Step 2: Run kapt
info "Running sample apt"
$KOTLIN_HOME/bin/kotlinc \
sample/br/com/thales/buckt/AnnotatedMain.kt \
sample/br/com/thales/buckt/AnnotatedMainJava.java \
-Xadd-compiler-builtins \
-classpath $APT_CLASSPATH \
-d sample/build/output \
-verbose \
-Xload-builtins-from-dependencies \
-module-name my-ap-client \
-no-reflect \
-no-stdlib \
-Xplugin=$TOOLS_JAR \
-Xplugin=$ANNOTATION_PROCESSOR \
-P plugin:org.jetbrains.kotlin.kapt3:aptMode=apt \
-P plugin:org.jetbrains.kotlin.kapt3:apclasspath=$WORKING_DIR/libs/kotlin-stdlib.jar \
-P plugin:org.jetbrains.kotlin.kapt3:apclasspath=$WORKING_DIR/libs/kotlin-reflect.jar \
-P plugin:org.jetbrains.kotlin.kapt3:apclasspath=$WORKING_DIR/ap-java/build/output/my-ap-java-lib.jar \
-P plugin:org.jetbrains.kotlin.kapt3:apclasspath=$WORKING_DIR/ap-kt/build/output/my-ap-kt-lib.jar \
-P plugin:org.jetbrains.kotlin.kapt3:apclasspath=$WORKING_DIR/libs/kotlin-annotation-processing.jar \
-P plugin:org.jetbrains.kotlin.kapt3:apclasspath=$WORKING_DIR/libs/kotlin-compiler.jar \
-P plugin:org.jetbrains.kotlin.kapt3:apclasspath=$WORKING_DIR/libs/com.squareup.javapoet-1.10.0.jar \
-P plugin:org.jetbrains.kotlin.kapt3:apclasspath=$WORKING_DIR/libs/com.squareup.kotlinpoet-0.5.0.jar \
-P plugin:org.jetbrains.kotlin.kapt3:sources=$SOURCES \
-P plugin:org.jetbrains.kotlin.kapt3:classes=$CLASSES \
-P plugin:org.jetbrains.kotlin.kapt3:incrementalData=$INCREMENTAL_DATA \
-P plugin:org.jetbrains.kotlin.kapt3:stubs=$STUBS \
-P plugin:org.jetbrains.kotlin.kapt3:apoptions=$GENERATED_DIR_MAP \
-P plugin:org.jetbrains.kotlin.kapt3:javacArguments=$EMPTY_MAP \
-P plugin:org.jetbrains.kotlin.kapt3:useLightAnalysis=$LIGHT_ANALYSIS \
-P plugin:org.jetbrains.kotlin.kapt3:correctErrorTypes=$CORRECT_ERROR_TYPES \
-P plugin:org.jetbrains.kotlin.kapt3:verbose=$VERBOSE \
&& info "STEP 4 COMPLETE." || die "STEP 4 FAILED."
#
# Step 4: Invoke kotlinc normally
info "Compiling sample kotlin"
$KOTLIN_HOME/bin/kotlinc \
sample/br/com/thales/buckt/AnnotatedMain.kt \
sample/br/com/thales/buckt/AnnotatedMainJava.java \
sample/build/generated \
-classpath $SAMPLE_CLASSPATH \
-d sample/build/output \
-verbose \
-module-name sample \
-no-stdlib \
-no-reflect \
&& info "STEP 4 COMPLETE." || die "STEP 4 FAILED."
#
Step 5: Invoke javac
info "Compiling sample java"
javac \
-proc:none \
-verbose \
-classpath $JAVAC_CLASSPATH \
-d sample/build/output \
sample/br/com/thales/buckt/AnnotatedMainJava.java \
$(find sample/build/generated -name "*.java") \
&& info "STEP 5 COMPLETE." || die "STEP 5 FAILED."
#
cp -r sample/resources/META-INF sample/build/output/META-INF
(cd sample/build/output && zip -r my-sample-lib META-INF br && mv my-sample-lib.zip my-sample-lib.jar && rm -rf META-INF && rm -rf br)

info "Running the jar"
$KOTLIN_HOME/bin/kotlin -cp sample/build/output/my-sample-lib.jar br.com.thales.buckt.AnnotatedMainKt \
&& info "STEP 6 COMPLETE." || die "STEP 6 FAILED."
